server:
   address: "0.0.0.0"
   port: 8080
   db_path: "./database"
   tls:
     cert_file: ""
     key_file: ""
   cors:
     allowed_origins:
       - "http://localhost:3000"
       - "http://127.0.0.1:3000"
   rate_limit:
     rps: 1000_0000
     burst: 2000_0000
   ip_whitelist:
     # - "127.0.0.1"
   api_keys:
     backend: ["sk_example"]
     frontend: ["pk_example"]
     admin: ["admin_example"]

logging:
  level: "info"

encryption:
  enabled: false
  fields: []
  kms:
    mode: "embedded"
    endpoint: "127.0.0.1:6820"
    data_dir: "./kms-data"
    binary: "/usr/local/bin/progressdb-kms"
    master_key_file: ""
    master_key_hex: ""

retention:
  enabled: false
  cron: ""
  period: "24h"
  batch_size: 1000
  batch_sleep_ms: 0
  dry_run: false
  paused: false
  min_period: "1h"
  lock_ttl: 300s

ingest:
  ingestor:
    worker_count: 2                  # Match 2-core CPU
    max_batch_size: 512         # Smaller batch to fit in lower RAM footprint
    flush_interval_ms: 5                 # Relaxed flush for lower resource use
  queue:
    mode: durable               # Keep on-disk durability
    # Shared base settings
    buffer_capacity: 8192              # Smaller queue to fit 1GB RAM
    flush_batch_size: 128             # Less in-memory per batch
    max_buffer_bytes: 64MB # Limit pooled buffer for lower RAM
    memory:
      enable_recovery: false
      truncate_interval: 0s
      poll_interval: 2ms    # Slightly slower polling reduces CPU
    durable:
      enable_recovery: true
      truncate_interval: 120s   # More infrequent WAL truncation (less SSD stress)
      max_file_size: 256MB      # WAL max size fits 1GB disk
      flush_batch_size: 32      # Keep batches tiny for minimal RAM and fast flush
      batch_interval: 50ms      # WAL flush every 50ms
      min_compression_bytes: 1024  # Compress only payloads 1KB+
      retention_bytes: 0
      retention_age: 0

telemetry:
  sample_rate: 0.001
  slow_threshold: 200ms
  buffer_size: 60MB
  file_max_size: 40MB
  flush_interval: 2s
  queue_capacity: 2048

sensor:
  monitor:
    poll_interval: 500ms
    disk_high_pct: 80
    disk_low_pct: 60
    mem_high_pct: 80
    cpu_high_pct: 90
    recovery_window: 5s

