server:
  # Server listen address and TLS settings
  address: "0.0.0.0"
  port: 8080
  db_path: "./database"
  tls:
    cert_file: ""
    key_file: ""

security:
  cors:
    allowed_origins:
      - "http://localhost:3000"
      - "http://127.0.0.1:3000"
  rate_limit:
    rps: 1000_0000
    burst: 2000_0000
  ip_whitelist:
    # - "127.0.0.1"
  api_keys:
    backend: ["sk_example"]
    frontend: ["pk_example"]
    admin: ["admin_example"]
  encryption:
    use: false
    fields: []
  kms:
    endpoint: "127.0.0.1:6820"
    data_dir: "./kms-data"
    binary: "/usr/local/bin/progressdb-kms"
    master_key_file: ""
    master_key_hex: ""

logging:
  level: "info"

retention:
  enabled: false
  cron: ""
  period: "24h"
  batch_size: 1000
  batch_sleep_ms: 0
  dry_run: false
  paused: false
  min_period: "1h"

ingest:
  processor:
    workers: 48                 # Double concurrency (more cores for higher throughput)
    max_batch: 10000            # Larger batch for better throughput
    flush_ms: 1                 # Flush even faster for lower latency
  queue:
    capacity: 1048576           # 1M queue: much larger, handles big spikes/bursts
    batch: 131072               # Larger batch size for higher throughput
    poll_interval: 250us        # Faster polling for lower latency
    max_buffer: 3221225472      # 3GB buffer (assuming lots of RAM for speed)
    recover: true
    truncate: 60s               # Less frequent SSD writes, but not a bottleneck
    wal:
      enabled: false             # WAL for durability
      mode: batch
      max_file: 2147483648      # 2GB WAL (less rotation, more headroom)
      batch_enabled: true
      batch: 4096               # Much larger WAL batch for best speed
      interval: 2ms             # WAL flush very frequently for speed
      compress: true
      compress_min: 512         # Only compress payloads 512B+, conserves CPU
      retention_bytes: 0
      retention_age: 0
